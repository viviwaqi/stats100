setwd("~/Documents/GitHub/stats100")
install.packages(c("fontawesome", "jsonlite", "mgcv", "processx", "ps", "rpart", "rsconnect", "shiny", "vctrs"))
knitr::opts_chunk$set(echo = TRUE)
binom.test(16, 20, p=0.5)
binom.test(16, 20, p = 0.5)
binom.test(16, 20, p = 2)
binom.test(16, 20, p = 0.5)
prop.test(16, 20, p = 0.5)
prop.test(16, 20, p = 0.5, correct = F)
binom.test(16, 20, p = 0.5, correct = F)
binom.test(16, 20, p = 0.5)
pbinom(15, 20, 0.5)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/GitHub/stats100")
library(tidyverse)
library(ggplot2)
library(scales)
library(RColorBrewer)
library(stats)
students <- read.csv("student.csv")
students
t.test(students$height, conf.level = 0.95)
glimpse(students)
tabyl(students)
glimpse(students)
summary(students)
t.test(students$pulse, conf.level = 0.99)
library(tidyr)
library(naniar)
library(tidyverse)
library(paletteer)
library(here)
library(purrr)
library(dplyr)
library(janitor)
library(stringr)
library(lubridate)
library(shiny)
library(shinydashboard)
library(scales)
options(scipen=999)
getwd()
OD <- readr::read_csv("VSRR_Provisional_Drug_Overdose_Death_Counts.csv") %>%
clean_names()
OD
glimpse(OD)
OD %>%
miss_var_summary()
OD<- OD %>%
select(!footnote_symbol) %>%
select(!period) %>%
select(!percent_complete)
OD
drugtypes<- OD %>%
select(!footnote) %>%
select(!percent_pending_investigation) %>%
filter(indicator != "Number of Deaths") %>%
filter(indicator != "Percent with drugs specified") %>%
rename("drug_type" = indicator)
drugtypes
deathcounts<- OD %>%
filter(indicator == "Number of Deaths" | indicator == "Number of Drug Overdose Deaths") %>%
pivot_wider(names_from = indicator,
values_from = data_value)
deathcounts<- clean_names(deathcounts)
deathcounts$year<- as_factor(deathcounts$year)
deathcounts
deathcounts<- deathcounts %>%
unite("date", year, month, sep = "-", remove = FALSE)
deathcounts$date<- as_factor(deathcounts$date)
deathcounts<- deathcounts %>%
group_by(date) %>%
mutate(overdosesum=sum(number_of_drug_overdose_deaths, na.rm = T))
deathcounts %>%
ggplot(aes(date, overdosesum, color=year)) +
geom_point() +
scale_x_discrete(breaks = c("2015-January", "2016-January", "2017-January", "2018-January", "2019-January", "2020-January", "2021-January"),
labels = c("2015", "2016", "2017", "2018", "2019", "2020", "2021"))+
labs(title = "Total Overdose Deaths In the US By Month and Year",
x = "Date (Month-Year)",
y = "Total Deaths Due To Drug Overdose")
deathcounts<- deathcounts %>%
group_by(date) %>%
mutate(totdeathsum=sum(number_of_deaths, na.rm = T))
deathcounts
deathcounts %>%
ggplot(aes(x=date, y=totdeathsum, color=year))+
geom_point()+
scale_y_log10()+
scale_x_discrete(breaks = c("2015-January", "2016-January", "2017-January", "2018-January", "2019-January", "2020-January", "2021-January"),
labels = c("2015", "2016", "2017", "2018", "2019", "2020", "2021"))+
labs(title = "Total Deaths In the US By Month and Year",
x = "Date (Month-Year)",
y = "Total Deaths (log10)")
library(tidyr)
library(naniar)
library(tidyverse)
library(paletteer)
library(here)
library(purrr)
library(dplyr)
library(janitor)
library(stringr)
library(lubridate)
library(shiny)
library(shinydashboard)
library(scales)
options(scipen=999)
getwd()
OD <- readr::read_csv("VSRR_Provisional_Drug_Overdose_Death_Counts.csv") %>%
clean_names()
OD
glimpse(OD)
OD %>%
miss_var_summary()
OD<- OD %>%
select(!footnote_symbol) %>%
select(!period) %>%
select(!percent_complete)
OD
drugtypes<- OD %>%
select(!footnote) %>%
select(!percent_pending_investigation) %>%
filter(indicator != "Number of Deaths") %>%
filter(indicator != "Percent with drugs specified") %>%
rename("drug_type" = indicator)
drugtypes
deathcounts<- OD %>%
filter(indicator == "Number of Deaths" | indicator == "Number of Drug Overdose Deaths") %>%
pivot_wider(names_from = indicator,
values_from = data_value)
deathcounts<- clean_names(deathcounts)
deathcounts$year<- as_factor(deathcounts$year)
deathcounts
deathcounts<- deathcounts %>%
unite("date", year, month, sep = "-", remove = FALSE)
deathcounts$date<- as_factor(deathcounts$date)
deathcounts<- deathcounts %>%
group_by(date) %>%
mutate(overdosesum=sum(number_of_drug_overdose_deaths, na.rm = T))
deathcounts %>%
ggplot(aes(date, overdosesum, color=year)) +
geom_point() +
scale_x_discrete(breaks = c("2015-January", "2016-January", "2017-January", "2018-January", "2019-January", "2020-January", "2021-January"),
labels = c("2015", "2016", "2017", "2018", "2019", "2020", "2021"))+
labs(title = "Total Overdose Deaths In the US By Month and Year",
x = "Date (Month-Year)",
y = "Total Deaths Due To Drug Overdose")
deathcounts<- deathcounts %>%
group_by(date) %>%
mutate(totdeathsum=sum(number_of_deaths, na.rm = T))
deathcounts
deathcounts %>%
ggplot(aes(x=date, y=totdeathsum, color=year))+
geom_point()+
scale_y_log10()+
scale_x_discrete(breaks = c("2015-January", "2016-January", "2017-January", "2018-January", "2019-January", "2020-January", "2021-January"),
labels = c("2015", "2016", "2017", "2018", "2019", "2020", "2021"))+
labs(title = "Total Deaths In the US By Month and Year",
x = "Date (Month-Year)",
y = "Total Deaths (log10)")
deathcounts %>%
mutate(overdoseprop=(overdosesum/totdeathsum))%>%
ggplot(aes(x=year, y=overdoseprop, color=year))+
geom_boxplot()+
scale_y_continuous(labels = percent)+
labs(title = "Percent of Total Deaths Caused By Overdose Per Year",
x= "Year",
y= "Percent Of Total Deaths",
caption= "Each month and year has a value, so this is the distribution of the values for each year")
druglabels <- c("Cocaine", "Heroin", "Methadone", "Natural & Semi-Synthetic Opioids", "	Natural & Semi-Synthetic Opioids, incl. Methadone", "Natural & Semi-Synthetic Opioids & Synthetic, incl. Methadone", "Opioids", "Psychosyimulants", "Synthetic Opioids, excl. Methadone")
drugtypes %>%
filter(drug_type != "Number of Drug Overdose Deaths")
drugtypes %>%
filter(drug_type != "Number of Drug Overdose Deaths") %>%
ggplot(aes(x=drug_type, y=data_value, fill=drug_type))+
geom_col()+
scale_x_discrete(labels = druglabels)+
scale_fill_discrete(labels = druglabels)+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
labs(title = "Total Number Of Deaths Per Drug (2015-2021)",
x = "Drug Type",
y = "Number of Deaths",
fill = "Drug Type")
drugtypes %>%
filter(drug_type != "Number of Drug Overdose Deaths") %>%
select(drug_type, data_value)
percent_pending_sums<- OD %>%
group_by(state_name, year) %>%
summarise(state_name, year, sums=sum(percent_pending_investigation))
percent_pending_sums
percent_pending_sums %>%
arrange(desc(sums))
percent_pending_sums %>%
ggplot(aes(x=year, y=sums, color=state_name))+
geom_line(size=1)+
facet_wrap(state_name ~ .)+
labs(title = "Percent Pending Investiagtion By State",
x = "Year",
y = "Sum of Percents Per Year")+
theme(axis.text.x = element_text(angle = 30))
states <- c("US", "DC", "YC", "AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
OD %>%
count(indicator)
drugInput <- c("Cocaine (T40.5)","Heroin (T40.1)",
"Methadone (T40.3)", "Natural & semi-synthetic opioids (T40.2)",	"Natural & semi-synthetic opioids, incl. methadone (T40.2, T40.3)", "Natural, semi-synthetic, & synthetic opioids, incl. methadone (T40.2-T40.4)", "Opioids (T40.0-T40.4,T40.6)","Psychostimulants with abuse potential (T43.6)",	"Synthetic opioids, excl. methadone (T40.4)")
OD %>%
filter(indicator!="Number of Deaths" & indicator !="Number of Drug Overdose Deaths" & indicator!="Percent with drugs specified") %>%
ggplot(aes_string(x="indicator", y="data_value", fill="indicator")) +geom_col()
OD %>%
filter(indicator=="Number of Deaths" & state=="CA") %>%
ggplot(aes(x=year, y=data_value, color=state)) +geom_jitter()
ui <- dashboardPage(skin="purple",
dashboardHeader(title = "Drug Overdose Deaths in the USA (2015-2021)", titleWidth=500),
dashboardSidebar(width=350,
sidebarMenu(
menuItem("#2 Drug Overdose Deaths per State", icon=icon("skull"), tabName = "2"), menuItem("#5a. Deaths by drug for each state", icon=icon("pills"), tabName="5a")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "2",
box(solidHeader=TRUE, status="primary",selectInput("state", "State", choices=states, selected="CA"), width = 2),
box(title="Plot of Annual Drug Overdose Deaths by State", plotOutput("plot2", width="600px", height="600px"))
), #tabItem 1 closing
tabItem(tabName = "5a",
box(solidHeader=TRUE, status="primary", "This graph aims to answer the question:", br(), "What drug causes the most deaths by state?", selectInput("state5a", "State", choices=states, selected="CA"), width=2),
box(title="Histogram of Overdose Deaths by Drug and State", plotOutput("plot5a", width="600px", height="600px"))
)
) #tabItems closing
)#dashboardBody closing
)
server <- function(input, output, session) {
output$menuitem2 <- renderMenu({
menuItem("2")
})
output$menuitem5a <- renderMenu({menuItem("5a")})
output$plot2 <- renderPlot({
OD %>%
filter(indicator=="Number of Drug Overdose Deaths") %>%
filter(state==input$state | state=="US") %>%
ggplot(aes(x=year, y=data_value, color=state)) +geom_jitter(size=3, alpha=0.5) +geom_smooth() +scale_y_log10()  +labs(y="Deaths (log10)", x="Year", title="Number of Annual Drug Overdose Deaths by State") +ylim(0,100000) +theme(plot.title = element_text(size=rel(1.5)))}) # #3
output$plot5a <- renderPlot({
OD %>%
filter(state==input$state5a & !is.na(data_value)) %>%
filter(indicator!="Number of Drug Overdose Deaths" & indicator!="Number of Deaths" & indicator!="Percent with drugs specified") %>%
ggplot(aes(x=indicator, y=data_value, fill=indicator)) +geom_col() +scale_x_discrete(labels = druglabels) +scale_fill_discrete(labels = druglabels) +labs(title="Total Number of Deaths Per Drug by State (2015-2021)", x = "Drug Type", y = "Number of Deaths", fill = "Drug Type") +theme(axis.text.x = element_text(angle = 30, hjust = 1), plot.title = element_text(size=rel(1.5)))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
